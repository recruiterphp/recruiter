#!/usr/bin/env php
<?php

autoload();

use Recruiter\Cli;
use Recruiter\Option;
use Recruiter\Recruiter;

$cli = new Cli();
$cli->add('recruiter', new Option\TargetHost('target'));
$cli->add('wait-strategy', new Option\WaitStrategy('backoff-to', '30s'));
/* $cli->add('memory-limit', new Option\MemoryLimit('memory-limit', '256MB')); */
$cli->add('supervisor', new Option\Supervisor('respawn'));
$cli->parse();


$options = array_merge(
    [
        'memory-limit' => 33554432, // 32MB
    ],
    getopt('', ['memory-limit::'])
);

$cli->get('supervisor')->applyTo(

    GracefulDeath::around(function($life) use($cli, $options) {
        $recruiter = $cli->get('recruiter');
        $waitStrategy = $cli->get('wait-strategy');

        while (!$life->askedToStop()) {
            $currentMemoryUsage = memory_get_usage();
            $pickStartAt = microtime(true);
            $numberOfAssignments = $recruiter->assignJobsToWorkers();
            $pickEndAt = microtime(true);
            printf(
                '[RECRUITER][%d][%s][%s] picked jobs for %d workers in %fms' . PHP_EOL,
                posix_getpid(), date('c'), ByteUnits\bytes($currentMemoryUsage)->format(),
                $numberOfAssignments, ($pickEndAt - $pickStartAt) * 1000
            );
            if ($currentMemoryUsage > (int)$options['memory-limit']) exit(1);
            ($numberOfAssignments === 0) ?
                $waitStrategy->wait()->backOff() :
                $waitStrategy->reset();
        }
        printf(
            '[RECRUITER][%d][%s] ok, see you space cowboy...' . PHP_EOL,
            posix_getpid(), date('c')
        );
    })
    ->doNotCaptureOutput()
    ->catchSignals([SIGTERM, SIGQUIT, SIGINT])
)
->run();


function autoload() {
    foreach (['/../vendor', '/../../..'] as $rp) {
        $file = __DIR__ . $rp . '/autoload.php';
        if (file_exists($file)) {
            require_once $file;
            break;
        }
    }
    if (!class_exists('Composer\Autoload\ClassLoader', false)) {
        fprintf(STDERR,
            'You need to set up the project dependencies using the following commands:' . PHP_EOL .
            'curl -s http://getcomposer.org/installer | php' . PHP_EOL .
            'php composer.phar install' . PHP_EOL
        );
        exit(1);
    }
}
