#!/usr/bin/env php
<?php

require __DIR__ . '/../vendor/autoload.php';

use Recruiter\Recruiter;
use Rych\ByteSize\ByteSize;

$options = array_merge(
    [
        'host' => 'localhost:27017',
        'memory-limit' => 33554432, // 32MB
    ],
    getopt('', ['host::', 'memory-limit::', 'respawn'])
);

$options['respawn'] = array_key_exists('respawn', $options);

GracefulDeath::around(function($life) {

    $pid = posix_getpid();

    $db = (new MongoClient($options['host']))->selectDB('recruiter');
    $recruiter = new Recruiter($db);

    while (!$life->askedToStop()) {
        $currentMemoryUsage = memory_get_usage();
        $pickStartAt = microtime(true);
        $numberOfAssignments = $recruiter->assignJobsToWorkers();
        $pickEndAt = microtime(true);
        printf(
            '[RECRUITER][%d][%s][%s] picked jobs for %d workers in %fms' . PHP_EOL,
            $pid, date('c'), ByteSize::formatMetric($currentMemoryUsage),
            $numberOfAssignments, ($pickEndAt - $pickStartAt) * 1000
        );
        if ($currentMemoryUsage > (int)$options['memory-limit']) exit(1);
        if ($numberOfAssignments === 0) usleep(1000 * 200);
    }

    printf('[RECRUITER][%d][%s] ok, see you space cowboy...' . PHP_EOL, $pid, date('c'));

})
->doNotCaptureOutput()
->catchSignals([SIGTERM, SIGQUIT, SIGINT])
->reanimationPolicy(function() use ($options) {
    if ($options['respawn']) {
        printf(
            '[SUPERVISOR][%d][%s] recruiter died, respawn...' . PHP_EOL,
            posix_getpid(), date('c')
        );
        return true;
    }
    printf(
        '[SUPERVISOR][%d][%s] %s' . PHP_EOL, posix_getpid(), date('c'),
        'recruiter died, I will let it go, start with --respawn options if you wish otherwise'
    );
    return false;
})
->run();
