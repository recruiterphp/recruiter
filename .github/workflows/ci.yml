name: CI Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
    inputs:
      run_long_tests:
        description: 'Run long tests'
        required: false
        default: false
        type: boolean

permissions:
  contents: read

jobs:
  validate-composer:
    steps:
    - uses: actions/checkout@v4

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

  build-image:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Define image name
      id: meta
      run: echo "image-name=recruiter:latest" >> $GITHUB_OUTPUT

    - name: Build with cache
      run: |
        docker buildx create --use
        docker buildx build \
          --cache-from type=gha \
          --cache-to type=gha,mode=max \
          --load \
          --tag recruiter-php \
          .

    - name: Save Docker image to tar
      run: docker save recruiter-php:latest -o recruiter.tar

    - name: Upload image as artifact
      uses: actions/upload-artifact@v4
      with:
        name: docker-image
        path: recruiter-php.tar

  test-fast:
    needs: build-image
    runs-on: ubuntu-latest
    env:
      COMPOSE_FILE: compose.yaml
    steps:
    - uses: actions/checkout@v4

    - uses: actions/download-artifact@v4
      with:
        name: docker-image
        path: .

    - name: Load Docker image
      run: docker load -i recruiter-php.tar

    - name: Run fast tests
      run: make test

  test-long:
    needs: build-image
    runs-on: ubuntu-latest
    timeout-minutes: 90
    if: github.event.inputs.run_long_tests == 'true'
    env:
      COMPOSE_FILE: compose.yaml
    steps:
    - uses: actions/checkout@v4

    - uses: actions/download-artifact@v4
      with:
        name: docker-image
        path: .

    - name: Load Docker image
      run: docker load -i recruiter-php.tar

    - name: Run fast tests
      run: make test-long
